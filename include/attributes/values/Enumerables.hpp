/***************************************************************************
* Copyright (c) 2017, Nico Caprioli                                        *
*                                                                          *
* Distributed under the terms of the LGPLv3 License.                       *
*                                                                          *
* The full license is in the file LICENSE, distributed with this software. *
****************************************************************************/
#pragma once
#ifndef WEB_BINARY_COMPRESSION_ATTRIBUTES_VALUES_ENUMERABLES_H
#define WEB_BINARY_COMPRESSION_ATTRIBUTES_VALUES_ENUMERABLES_H
#include <memory>
#include <unordered_map>
#include "NumericLiterals.hpp"
#include "attributes/types/Enumerable.hpp"

namespace WebBinaryCompression::Attributes::Values::Enumerables {
using namespace std::string_view_literals;
/**
 * \brief Maps all \link Types::Enumerable \endlink names to their equivalent.
 */
static const std::unordered_map<std::string_view,
                                std::shared_ptr<Types::Enumerable>,
                                Types::EnumerableHasher> elements = {
  {
    "_blank"sv,
    std::make_shared<Types::Enumerable>(0x06_uint8)
  },
  {
    "_parent"sv,
    std::make_shared<Types::Enumerable>(0x07_uint8)
  },
  {
    "_self"sv,
    std::make_shared<Types::Enumerable>(0x08_uint8)
  },
  {
    "_top"sv,
    std::make_shared<Types::Enumerable>(0x09_uint8)
  },
  {
    "a"sv,
    std::make_shared<Types::Enumerable>(0x0A_uint8)
  },
  {
    "additional-name"sv,
    std::make_shared<Types::Enumerable>(0x0B_uint8)
  },
  {
    "address-level1"sv,
    std::make_shared<Types::Enumerable>(0x0C_uint8)
  },
  {
    "address-level2"sv,
    std::make_shared<Types::Enumerable>(0x0D_uint8)
  },
  {
    "address-level3"sv,
    std::make_shared<Types::Enumerable>(0x0E_uint8)
  },
  {
    "address-level4"sv,
    std::make_shared<Types::Enumerable>(0x0F_uint8)
  },
  {
    "address-line1"sv,
    std::make_shared<Types::Enumerable>(0x10_uint8)
  },
  {
    "address-line2"sv,
    std::make_shared<Types::Enumerable>(0x11_uint8)
  },
  {
    "address-line3"sv,
    std::make_shared<Types::Enumerable>(0x12_uint8)
  },
  {
    "anonymous"sv,
    std::make_shared<Types::Enumerable>(0x13_uint8)
  },
  {
    "application-name"sv,
    std::make_shared<Types::Enumerable>(0x14_uint8)
  },
  {
    "author"sv,
    std::make_shared<Types::Enumerable>(0x15_uint8)
  },
  {
    "auto"sv,
    std::make_shared<Types::Enumerable>(0x16_uint8)
  },
  {
    "backward"sv,
    std::make_shared<Types::Enumerable>(0x17_uint8)
  },
  {
    "bday"sv,
    std::make_shared<Types::Enumerable>(0x18_uint8)
  },
  {
    "bday-day"sv,
    std::make_shared<Types::Enumerable>(0x19_uint8)
  },
  {
    "bday-month"sv,
    std::make_shared<Types::Enumerable>(0x1A_uint8)
  },
  {
    "bday-year"sv,
    std::make_shared<Types::Enumerable>(0x1B_uint8)
  },
  {
    "button"sv,
    std::make_shared<Types::Enumerable>(0x1C_uint8)
  },
  {
    "captions"sv,
    std::make_shared<Types::Enumerable>(0x1D_uint8)
  },
  {
    "cc-additional-name"sv,
    std::make_shared<Types::Enumerable>(0x1E_uint8)
  },
  {
    "cc-csc"sv,
    std::make_shared<Types::Enumerable>(0x1F_uint8)
  },
  {
    "cc-exp"sv,
    std::make_shared<Types::Enumerable>(0x20_uint8)
  },
  {
    "cc-exp-month"sv,
    std::make_shared<Types::Enumerable>(0x21_uint8)
  },
  {
    "cc-exp-year"sv,
    std::make_shared<Types::Enumerable>(0x22_uint8)
  },
  {
    "cc-family-name"sv,
    std::make_shared<Types::Enumerable>(0x23_uint8)
  },
  {
    "cc-given-name"sv,
    std::make_shared<Types::Enumerable>(0x24_uint8)
  },
  {
    "cc-name"sv,
    std::make_shared<Types::Enumerable>(0x25_uint8)
  },
  {
    "cc-number"sv,
    std::make_shared<Types::Enumerable>(0x26_uint8)
  },
  {
    "cc-type"sv,
    std::make_shared<Types::Enumerable>(0x27_uint8)
  },
  {
    "chapters"sv,
    std::make_shared<Types::Enumerable>(0x28_uint8)
  },
  {
    "checkbox"sv,
    std::make_shared<Types::Enumerable>(0x29_uint8)
  },
  {
    "circle"sv,
    std::make_shared<Types::Enumerable>(0x2A_uint8)
  },
  {
    "col"sv,
    std::make_shared<Types::Enumerable>(0x2B_uint8)
  },
  {
    "colgroup"sv,
    std::make_shared<Types::Enumerable>(0x2C_uint8)
  },
  {
    "color"sv,
    std::make_shared<Types::Enumerable>(0x2D_uint8)
  },
  {
    "command"sv,
    std::make_shared<Types::Enumerable>(0x2E_uint8)
  },
  {
    "content-security-policy"sv,
    std::make_shared<Types::Enumerable>(0x2F_uint8)
  },
  {
    "context"sv,
    std::make_shared<Types::Enumerable>(0x30_uint8)
  },
  {
    "copy"sv,
    std::make_shared<Types::Enumerable>(0x31_uint8)
  },
  {
    "country"sv,
    std::make_shared<Types::Enumerable>(0x32_uint8)
  },
  {
    "country-name"sv,
    std::make_shared<Types::Enumerable>(0x33_uint8)
  },
  {
    "creator"sv,
    std::make_shared<Types::Enumerable>(0x34_uint8)
  },
  {
    "current-password"sv,
    std::make_shared<Types::Enumerable>(0x35_uint8)
  },
  {
    "date"sv,
    std::make_shared<Types::Enumerable>(0x36_uint8)
  },
  {
    "datetime-local"sv,
    std::make_shared<Types::Enumerable>(0x37_uint8)
  },
  {
    "default"sv,
    std::make_shared<Types::Enumerable>(0x38_uint8)
  },
  {
    "default-style"sv,
    std::make_shared<Types::Enumerable>(0x39_uint8)
  },
  {
    "description"sv,
    std::make_shared<Types::Enumerable>(0x3A_uint8)
  },
  {
    "descriptions"sv,
    std::make_shared<Types::Enumerable>(0x3B_uint8)
  },
  {
    "email"sv,
    std::make_shared<Types::Enumerable>(0x3C_uint8)
  },
  {
    "family-name"sv,
    std::make_shared<Types::Enumerable>(0x3D_uint8)
  },
  {
    "file"sv,
    std::make_shared<Types::Enumerable>(0x3E_uint8)
  },
  {
    "follow"sv,
    std::make_shared<Types::Enumerable>(0x3F_uint8)
  },
  {
    "forward"sv,
    std::make_shared<Types::Enumerable>(0x40_uint8)
  },
  {
    "full-width-latin"sv,
    std::make_shared<Types::Enumerable>(0x41_uint8)
  },
  {
    "generator"sv,
    std::make_shared<Types::Enumerable>(0x42_uint8)
  },
  {
    "get"sv,
    std::make_shared<Types::Enumerable>(0x43_uint8)
  },
  {
    "given-name"sv,
    std::make_shared<Types::Enumerable>(0x44_uint8)
  },
  {
    "googlebot"sv,
    std::make_shared<Types::Enumerable>(0x45_uint8)
  },
  {
    "hard"sv,
    std::make_shared<Types::Enumerable>(0x46_uint8)
  },
  {
    "hidden"sv,
    std::make_shared<Types::Enumerable>(0x47_uint8)
  },
  {
    "honorific-prefix"sv,
    std::make_shared<Types::Enumerable>(0x48_uint8)
  },
  {
    "honorific-suffix"sv,
    std::make_shared<Types::Enumerable>(0x49_uint8)
  },
  {
    "i"sv,
    std::make_shared<Types::Enumerable>(0x4A_uint8)
  },
  {
    "image"sv,
    std::make_shared<Types::Enumerable>(0x4B_uint8)
  },
  {
    "index"sv,
    std::make_shared<Types::Enumerable>(0x4C_uint8)
  },
  {
    "kana"sv,
    std::make_shared<Types::Enumerable>(0x4D_uint8)
  },
  {
    "katakana"sv,
    std::make_shared<Types::Enumerable>(0x4E_uint8)
  },
  {
    "keywords"sv,
    std::make_shared<Types::Enumerable>(0x4F_uint8)
  },
  {
    "language"sv,
    std::make_shared<Types::Enumerable>(0x50_uint8)
  },
  {
    "latin"sv,
    std::make_shared<Types::Enumerable>(0x51_uint8)
  },
  {
    "latin-name"sv,
    std::make_shared<Types::Enumerable>(0x52_uint8)
  },
  {
    "latin-prose"sv,
    std::make_shared<Types::Enumerable>(0x53_uint8)
  },
  {
    "link"sv,
    std::make_shared<Types::Enumerable>(0x54_uint8)
  },
  {
    "ltr"sv,
    std::make_shared<Types::Enumerable>(0x55_uint8)
  },
  {
    "menu"sv,
    std::make_shared<Types::Enumerable>(0x56_uint8)
  },
  {
    "metadata"sv,
    std::make_shared<Types::Enumerable>(0x57_uint8)
  },
  {
    "month"sv,
    std::make_shared<Types::Enumerable>(0x58_uint8)
  },
  {
    "move"sv,
    std::make_shared<Types::Enumerable>(0x59_uint8)
  },
  {
    "name"sv,
    std::make_shared<Types::Enumerable>(0x5A_uint8)
  },
  {
    "new-password"sv,
    std::make_shared<Types::Enumerable>(0x5B_uint8)
  },
  {
    "nickname"sv,
    std::make_shared<Types::Enumerable>(0x5C_uint8)
  },
  {
    "noarchive"sv,
    std::make_shared<Types::Enumerable>(0x5D_uint8)
  },
  {
    "nocache"sv,
    std::make_shared<Types::Enumerable>(0x5E_uint8)
  },
  {
    "nofollow"sv,
    std::make_shared<Types::Enumerable>(0x5F_uint8)
  },
  {
    "noimageindex"sv,
    std::make_shared<Types::Enumerable>(0x60_uint8)
  },
  {
    "noindex"sv,
    std::make_shared<Types::Enumerable>(0x61_uint8)
  },
  {
    "none"sv,
    std::make_shared<Types::Enumerable>(0x62_uint8)
  },
  {
    "noodp"sv,
    std::make_shared<Types::Enumerable>(0x63_uint8)
  },
  {
    "no-referrer"sv,
    std::make_shared<Types::Enumerable>(0x64_uint8)
  },
  {
    "no-referrer-when-downgrade"sv,
    std::make_shared<Types::Enumerable>(0x65_uint8)
  },
  {
    "nosnippet"sv,
    std::make_shared<Types::Enumerable>(0x66_uint8)
  },
  {
    "number"sv,
    std::make_shared<Types::Enumerable>(0x67_uint8)
  },
  {
    "numeric"sv,
    std::make_shared<Types::Enumerable>(0x68_uint8)
  },
  {
    "off"sv,
    std::make_shared<Types::Enumerable>(0x69_uint8)
  },
  {
    "on"sv,
    std::make_shared<Types::Enumerable>(0x6A_uint8)
  },
  {
    "organization"sv,
    std::make_shared<Types::Enumerable>(0x6B_uint8)
  },
  {
    "organization-title"sv,
    std::make_shared<Types::Enumerable>(0x6C_uint8)
  },
  {
    "origin"sv,
    std::make_shared<Types::Enumerable>(0x6D_uint8)
  },
  {
    "origin-when-crossorigin"sv,
    std::make_shared<Types::Enumerable>(0x6E_uint8)
  },
  {
    "password"sv,
    std::make_shared<Types::Enumerable>(0x6F_uint8)
  },
  {
    "photo"sv,
    std::make_shared<Types::Enumerable>(0x70_uint8)
  },
  {
    "poly"sv,
    std::make_shared<Types::Enumerable>(0x71_uint8)
  },
  {
    "post"sv,
    std::make_shared<Types::Enumerable>(0x72_uint8)
  },
  {
    "postal-code"sv,
    std::make_shared<Types::Enumerable>(0x73_uint8)
  },
  {
    "publisher"sv,
    std::make_shared<Types::Enumerable>(0x74_uint8)
  },
  {
    "radio"sv,
    std::make_shared<Types::Enumerable>(0x75_uint8)
  },
  {
    "range"sv,
    std::make_shared<Types::Enumerable>(0x76_uint8)
  },
  {
    "rect"sv,
    std::make_shared<Types::Enumerable>(0x77_uint8)
  },
  {
    "referrer"sv,
    std::make_shared<Types::Enumerable>(0x78_uint8)
  },
  {
    "refresg"sv,
    std::make_shared<Types::Enumerable>(0x79_uint8)
  },
  {
    "reset"sv,
    std::make_shared<Types::Enumerable>(0x7A_uint8)
  },
  {
    "robots"sv,
    std::make_shared<Types::Enumerable>(0x7B_uint8)
  },
  {
    "row"sv,
    std::make_shared<Types::Enumerable>(0x7C_uint8)
  },
  {
    "rowgroup"sv,
    std::make_shared<Types::Enumerable>(0x7D_uint8)
  },
  {
    "rtl"sv,
    std::make_shared<Types::Enumerable>(0x7E_uint8)
  },
  {
    "search"sv,
    std::make_shared<Types::Enumerable>(0x7F_uint8)
  },
  {
    "sex"sv,
    std::make_shared<Types::Enumerable>(0x8000_uint16)
  },
  {
    "slurp"sv,
    std::make_shared<Types::Enumerable>(0x8001_uint16)
  },
  {
    "soft"sv,
    std::make_shared<Types::Enumerable>(0x8002_uint16)
  },
  {
    "street-address"sv,
    std::make_shared<Types::Enumerable>(0x8003_uint16)
  },
  {
    "submit"sv,
    std::make_shared<Types::Enumerable>(0x8004_uint16)
  },
  {
    "subtitles"sv,
    std::make_shared<Types::Enumerable>(0x8005_uint16)
  },
  {
    "tel"sv,
    std::make_shared<Types::Enumerable>(0x8006_uint16)
  },
  {
    "text"sv,
    std::make_shared<Types::Enumerable>(0x8007_uint16)
  },
  {
    "time"sv,
    std::make_shared<Types::Enumerable>(0x8008_uint16)
  },
  {
    "toolbar"sv,
    std::make_shared<Types::Enumerable>(0x8009_uint16)
  },
  {
    "transaction-amount"sv,
    std::make_shared<Types::Enumerable>(0x800A_uint16)
  },
  {
    "transaction-currency"sv,
    std::make_shared<Types::Enumerable>(0x800B_uint16)
  },
  {
    "unsafe-URL"sv,
    std::make_shared<Types::Enumerable>(0x800C_uint16)
  },
  {
    "url"sv,
    std::make_shared<Types::Enumerable>(0x800D_uint16)
  },
  {
    "use-credential"sv,
    std::make_shared<Types::Enumerable>(0x800E_uint16)
  },
  {
    "username"sv,
    std::make_shared<Types::Enumerable>(0x800F_uint16)
  },
  {
    "verbatim"sv,
    std::make_shared<Types::Enumerable>(0x8010_uint16)
  },
  {
    "viewport"sv,
    std::make_shared<Types::Enumerable>(0x8011_uint16)
  },
  {
    "week"sv,
    std::make_shared<Types::Enumerable>(0x8012_uint16)
  }
};
}  // namespace WebBinaryCompression::Attributes::Values::Enumerables
#endif
